Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ast_match
Rule 1     ast_match -> ast_expr
Rule 2     ast_set -> LBK ast_exprlist RBK
Rule 3     ast_exprlist -> ast_expr
Rule 4     ast_exprlist -> ast_exprlist COMMA ast_expr
Rule 5     ast_exprlist -> <empty>
Rule 6     ast_special -> SPECIAL WORD
Rule 7     ast_expr -> ast_expr CODE
Rule 8     ast_expr -> ast_expr ast_special
Rule 9     ast_expr -> ast_expr ast_set
Rule 10    ast_expr -> ast_expr OR ast_expr
Rule 11    ast_expr -> ast_expr NOT ast_expr
Rule 12    ast_expr -> ast_expr ast_expr STAR
Rule 13    ast_expr -> <empty>

Terminals, with rules where they appear

CODE                 : 7
COMMA                : 4
LBK                  : 2
NOT                  : 11
OR                   : 10
RBK                  : 2
SPECIAL              : 6
STAR                 : 12
WORD                 : 6
error                : 

Nonterminals, with rules where they appear

ast_expr             : 1 3 4 7 8 9 10 10 11 11 12 12
ast_exprlist         : 2 4
ast_match            : 0
ast_set              : 9
ast_special          : 8

Parsing method: LALR

state 0

    (0) S' -> . ast_match
    (1) ast_match -> . ast_expr
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

    CODE            reduce using rule 13 (ast_expr -> .)
    OR              reduce using rule 13 (ast_expr -> .)
    NOT             reduce using rule 13 (ast_expr -> .)
    SPECIAL         reduce using rule 13 (ast_expr -> .)
    LBK             reduce using rule 13 (ast_expr -> .)
    STAR            reduce using rule 13 (ast_expr -> .)
    $end            reduce using rule 13 (ast_expr -> .)

    ast_match                      shift and go to state 1
    ast_expr                       shift and go to state 2

state 1

    (0) S' -> ast_match .



state 2

    (1) ast_match -> ast_expr .
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    $end            reduce using rule 1 (ast_match -> ast_expr .)
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10
    STAR            reduce using rule 13 (ast_expr -> .)

  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6

state 3

    (12) ast_expr -> ast_expr ast_expr . STAR
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    STAR            shift and go to state 11
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10

  ! STAR            [ reduce using rule 13 (ast_expr -> .) ]
  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6

state 4

    (7) ast_expr -> ast_expr CODE .

    CODE            reduce using rule 7 (ast_expr -> ast_expr CODE .)
    OR              reduce using rule 7 (ast_expr -> ast_expr CODE .)
    NOT             reduce using rule 7 (ast_expr -> ast_expr CODE .)
    SPECIAL         reduce using rule 7 (ast_expr -> ast_expr CODE .)
    LBK             reduce using rule 7 (ast_expr -> ast_expr CODE .)
    STAR            reduce using rule 7 (ast_expr -> ast_expr CODE .)
    $end            reduce using rule 7 (ast_expr -> ast_expr CODE .)
    RBK             reduce using rule 7 (ast_expr -> ast_expr CODE .)
    COMMA           reduce using rule 7 (ast_expr -> ast_expr CODE .)


state 5

    (8) ast_expr -> ast_expr ast_special .

    CODE            reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    OR              reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    NOT             reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    SPECIAL         reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    LBK             reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    STAR            reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    $end            reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    RBK             reduce using rule 8 (ast_expr -> ast_expr ast_special .)
    COMMA           reduce using rule 8 (ast_expr -> ast_expr ast_special .)


state 6

    (9) ast_expr -> ast_expr ast_set .

    CODE            reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    OR              reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    NOT             reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    SPECIAL         reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    LBK             reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    STAR            reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    $end            reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    RBK             reduce using rule 9 (ast_expr -> ast_expr ast_set .)
    COMMA           reduce using rule 9 (ast_expr -> ast_expr ast_set .)


state 7

    (10) ast_expr -> ast_expr OR . ast_expr
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

    CODE            reduce using rule 13 (ast_expr -> .)
    OR              reduce using rule 13 (ast_expr -> .)
    NOT             reduce using rule 13 (ast_expr -> .)
    SPECIAL         reduce using rule 13 (ast_expr -> .)
    LBK             reduce using rule 13 (ast_expr -> .)
    STAR            reduce using rule 13 (ast_expr -> .)
    $end            reduce using rule 13 (ast_expr -> .)
    RBK             reduce using rule 13 (ast_expr -> .)
    COMMA           reduce using rule 13 (ast_expr -> .)

    ast_expr                       shift and go to state 12

state 8

    (11) ast_expr -> ast_expr NOT . ast_expr
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

    CODE            reduce using rule 13 (ast_expr -> .)
    OR              reduce using rule 13 (ast_expr -> .)
    NOT             reduce using rule 13 (ast_expr -> .)
    SPECIAL         reduce using rule 13 (ast_expr -> .)
    LBK             reduce using rule 13 (ast_expr -> .)
    STAR            reduce using rule 13 (ast_expr -> .)
    $end            reduce using rule 13 (ast_expr -> .)
    RBK             reduce using rule 13 (ast_expr -> .)
    COMMA           reduce using rule 13 (ast_expr -> .)

    ast_expr                       shift and go to state 13

state 9

    (6) ast_special -> SPECIAL . WORD

    WORD            shift and go to state 14


state 10

    (2) ast_set -> LBK . ast_exprlist RBK
    (3) ast_exprlist -> . ast_expr
    (4) ast_exprlist -> . ast_exprlist COMMA ast_expr
    (5) ast_exprlist -> .
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! reduce/reduce conflict for RBK resolved using rule 5 (ast_exprlist -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 5 (ast_exprlist -> .)
    RBK             reduce using rule 5 (ast_exprlist -> .)
    COMMA           reduce using rule 5 (ast_exprlist -> .)
    CODE            reduce using rule 13 (ast_expr -> .)
    OR              reduce using rule 13 (ast_expr -> .)
    NOT             reduce using rule 13 (ast_expr -> .)
    SPECIAL         reduce using rule 13 (ast_expr -> .)
    LBK             reduce using rule 13 (ast_expr -> .)
    STAR            reduce using rule 13 (ast_expr -> .)

  ! RBK             [ reduce using rule 13 (ast_expr -> .) ]
  ! COMMA           [ reduce using rule 13 (ast_expr -> .) ]

    ast_exprlist                   shift and go to state 15
    ast_expr                       shift and go to state 16

state 11

    (12) ast_expr -> ast_expr ast_expr STAR .

    CODE            reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    OR              reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    NOT             reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    SPECIAL         reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    LBK             reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    STAR            reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    $end            reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    RBK             reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)
    COMMA           reduce using rule 12 (ast_expr -> ast_expr ast_expr STAR .)


state 12

    (10) ast_expr -> ast_expr OR ast_expr .
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
  ! reduce/reduce conflict for STAR resolved using rule 10 (ast_expr -> ast_expr OR ast_expr .)
  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    STAR            reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .)
    $end            reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .)
    RBK             reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .)
    COMMA           reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .)
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10

  ! CODE            [ reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .) ]
  ! OR              [ reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .) ]
  ! NOT             [ reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .) ]
  ! SPECIAL         [ reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .) ]
  ! LBK             [ reduce using rule 10 (ast_expr -> ast_expr OR ast_expr .) ]
  ! STAR            [ reduce using rule 13 (ast_expr -> .) ]
  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6

state 13

    (11) ast_expr -> ast_expr NOT ast_expr .
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
  ! reduce/reduce conflict for STAR resolved using rule 11 (ast_expr -> ast_expr NOT ast_expr .)
  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    STAR            reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .)
    $end            reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .)
    RBK             reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .)
    COMMA           reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .)
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10

  ! CODE            [ reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .) ]
  ! OR              [ reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .) ]
  ! NOT             [ reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .) ]
  ! SPECIAL         [ reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .) ]
  ! LBK             [ reduce using rule 11 (ast_expr -> ast_expr NOT ast_expr .) ]
  ! STAR            [ reduce using rule 13 (ast_expr -> .) ]
  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6

state 14

    (6) ast_special -> SPECIAL WORD .

    CODE            reduce using rule 6 (ast_special -> SPECIAL WORD .)
    OR              reduce using rule 6 (ast_special -> SPECIAL WORD .)
    NOT             reduce using rule 6 (ast_special -> SPECIAL WORD .)
    SPECIAL         reduce using rule 6 (ast_special -> SPECIAL WORD .)
    LBK             reduce using rule 6 (ast_special -> SPECIAL WORD .)
    STAR            reduce using rule 6 (ast_special -> SPECIAL WORD .)
    $end            reduce using rule 6 (ast_special -> SPECIAL WORD .)
    RBK             reduce using rule 6 (ast_special -> SPECIAL WORD .)
    COMMA           reduce using rule 6 (ast_special -> SPECIAL WORD .)


state 15

    (2) ast_set -> LBK ast_exprlist . RBK
    (4) ast_exprlist -> ast_exprlist . COMMA ast_expr

    RBK             shift and go to state 17
    COMMA           shift and go to state 18


state 16

    (3) ast_exprlist -> ast_expr .
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    RBK             reduce using rule 3 (ast_exprlist -> ast_expr .)
    COMMA           reduce using rule 3 (ast_exprlist -> ast_expr .)
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10
    STAR            reduce using rule 13 (ast_expr -> .)

  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6

state 17

    (2) ast_set -> LBK ast_exprlist RBK .

    CODE            reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    OR              reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    NOT             reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    SPECIAL         reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    LBK             reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    STAR            reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    $end            reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    RBK             reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)
    COMMA           reduce using rule 2 (ast_set -> LBK ast_exprlist RBK .)


state 18

    (4) ast_exprlist -> ast_exprlist COMMA . ast_expr
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

    CODE            reduce using rule 13 (ast_expr -> .)
    OR              reduce using rule 13 (ast_expr -> .)
    NOT             reduce using rule 13 (ast_expr -> .)
    SPECIAL         reduce using rule 13 (ast_expr -> .)
    LBK             reduce using rule 13 (ast_expr -> .)
    STAR            reduce using rule 13 (ast_expr -> .)
    RBK             reduce using rule 13 (ast_expr -> .)
    COMMA           reduce using rule 13 (ast_expr -> .)

    ast_expr                       shift and go to state 19

state 19

    (4) ast_exprlist -> ast_exprlist COMMA ast_expr .
    (7) ast_expr -> ast_expr . CODE
    (8) ast_expr -> ast_expr . ast_special
    (9) ast_expr -> ast_expr . ast_set
    (10) ast_expr -> ast_expr . OR ast_expr
    (11) ast_expr -> ast_expr . NOT ast_expr
    (12) ast_expr -> ast_expr . ast_expr STAR
    (6) ast_special -> . SPECIAL WORD
    (2) ast_set -> . LBK ast_exprlist RBK
    (7) ast_expr -> . ast_expr CODE
    (8) ast_expr -> . ast_expr ast_special
    (9) ast_expr -> . ast_expr ast_set
    (10) ast_expr -> . ast_expr OR ast_expr
    (11) ast_expr -> . ast_expr NOT ast_expr
    (12) ast_expr -> . ast_expr ast_expr STAR
    (13) ast_expr -> .

  ! shift/reduce conflict for CODE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for SPECIAL resolved as shift
  ! shift/reduce conflict for LBK resolved as shift
    RBK             reduce using rule 4 (ast_exprlist -> ast_exprlist COMMA ast_expr .)
    COMMA           reduce using rule 4 (ast_exprlist -> ast_exprlist COMMA ast_expr .)
    CODE            shift and go to state 4
    OR              shift and go to state 7
    NOT             shift and go to state 8
    SPECIAL         shift and go to state 9
    LBK             shift and go to state 10
    STAR            reduce using rule 13 (ast_expr -> .)

  ! CODE            [ reduce using rule 13 (ast_expr -> .) ]
  ! OR              [ reduce using rule 13 (ast_expr -> .) ]
  ! NOT             [ reduce using rule 13 (ast_expr -> .) ]
  ! SPECIAL         [ reduce using rule 13 (ast_expr -> .) ]
  ! LBK             [ reduce using rule 13 (ast_expr -> .) ]

    ast_expr                       shift and go to state 3
    ast_special                    shift and go to state 5
    ast_set                        shift and go to state 6
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CODE in state 2 resolved as shift
WARNING: shift/reduce conflict for OR in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 2 resolved as shift
WARNING: shift/reduce conflict for LBK in state 2 resolved as shift
WARNING: shift/reduce conflict for STAR in state 3 resolved as shift
WARNING: shift/reduce conflict for CODE in state 3 resolved as shift
WARNING: shift/reduce conflict for OR in state 3 resolved as shift
WARNING: shift/reduce conflict for NOT in state 3 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 3 resolved as shift
WARNING: shift/reduce conflict for LBK in state 3 resolved as shift
WARNING: shift/reduce conflict for CODE in state 12 resolved as shift
WARNING: shift/reduce conflict for OR in state 12 resolved as shift
WARNING: shift/reduce conflict for NOT in state 12 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 12 resolved as shift
WARNING: shift/reduce conflict for LBK in state 12 resolved as shift
WARNING: shift/reduce conflict for CODE in state 12 resolved as shift
WARNING: shift/reduce conflict for OR in state 12 resolved as shift
WARNING: shift/reduce conflict for NOT in state 12 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 12 resolved as shift
WARNING: shift/reduce conflict for LBK in state 12 resolved as shift
WARNING: shift/reduce conflict for CODE in state 13 resolved as shift
WARNING: shift/reduce conflict for OR in state 13 resolved as shift
WARNING: shift/reduce conflict for NOT in state 13 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 13 resolved as shift
WARNING: shift/reduce conflict for LBK in state 13 resolved as shift
WARNING: shift/reduce conflict for CODE in state 13 resolved as shift
WARNING: shift/reduce conflict for OR in state 13 resolved as shift
WARNING: shift/reduce conflict for NOT in state 13 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 13 resolved as shift
WARNING: shift/reduce conflict for LBK in state 13 resolved as shift
WARNING: shift/reduce conflict for CODE in state 16 resolved as shift
WARNING: shift/reduce conflict for OR in state 16 resolved as shift
WARNING: shift/reduce conflict for NOT in state 16 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 16 resolved as shift
WARNING: shift/reduce conflict for LBK in state 16 resolved as shift
WARNING: shift/reduce conflict for CODE in state 19 resolved as shift
WARNING: shift/reduce conflict for OR in state 19 resolved as shift
WARNING: shift/reduce conflict for NOT in state 19 resolved as shift
WARNING: shift/reduce conflict for SPECIAL in state 19 resolved as shift
WARNING: shift/reduce conflict for LBK in state 19 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (ast_exprlist -> <empty>)
WARNING: rejected rule (ast_expr -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 12 resolved using rule (ast_expr -> ast_expr OR ast_expr)
WARNING: rejected rule (ast_expr -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (ast_expr -> ast_expr NOT ast_expr)
WARNING: rejected rule (ast_expr -> <empty>) in state 13
